#include <stdlib.h>
#include <stdio.h>
#include <math.h>

void merge(int *v,int inicio, int meio, int final){
    int *temp, p1, p2, i, j, k, tamanho;
    int fim1 = 0, fim2 = 0;
    tamanho = final-inicio+1;
    p1 = inicio;
    p2 = meio+1;
    
    temp = (int*) malloc(tamanho * sizeof(int));
    if(temp != NULL){
        for(i = 0; i < tamanho; i++){
            if(!fim1 && !fim2){
                if(v[p1] > v[p2]){
                    temp[i] = v[p2++];
                }
                else{
                    temp[i] = v[p1++];
                }
                if(p1 > meio) fim1 = 1;
                if(p2 > final) fim2 = 1;
            }
            else{
                if(!fim1){
                    temp[i] = v[p1++];
                }
                else{
                    temp[i] = v[p2++];
                }
            }
        }
        for(j = 0, k = inicio; j < tamanho; j++,k++){
            v[k] = temp[j];
        }
    }
    free(temp);
}

void mergesort(int *v, int inicio, int final){
    int meio;
    if(inicio < final){
        meio = floor((inicio + final) /2);
        mergesort(v,inicio,meio);
        mergesort(v,meio+1,final);
        merge(v,inicio,meio,final);
    }
}

int main()
{
    int a[7] = {7,6,5,4,3,2,1};
    mergesort(a,0,6);
    int i;
    for(i = 0; i < 7; i++){
        printf("%d ", a[i]);
    }

    return 0;
}
